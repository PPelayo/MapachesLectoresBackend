// <auto-generated />
using System;
using MapachesLectoresBackend.Core.Data.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MapachesLectoresBackend.Migrations
{
    [DbContext(typeof(MapachesDbContext))]
    [Migration("20241121171515_AddedDefaultDataToCategories")]
    partial class AddedDefaultDataToCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Author", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("author", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Book", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<uint>("NumberOfPages")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("PublisherId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("book", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksAuthors", b =>
                {
                    b.Property<uint>("BookId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("AuthorId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("books_authors", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksCategories", b =>
                {
                    b.Property<uint>("BookId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("CategoryId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("books_categories", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Category", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Terror",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174000",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Romance",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174001",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Suspense",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174002",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Policiaca",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174003",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ciencia Ficción",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174004",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fantasía",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174005",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Aventuras",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174006",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Misterio",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174007",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Drama",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174008",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comedia",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174009",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Historia",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174010",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Biografía",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174011",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Autoayuda",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174012",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cocina",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174013",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15u,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Viajes",
                            ItemUuid = "123e4567-e89b-12d3-a456-426614174014",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Publisher", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("publisher", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Reviews.Domain.Model.Review", b =>
                {
                    b.Property<string>("BookId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(999)
                        .HasColumnType("varchar(999)");

                    b.Property<uint>("GeneralRating")
                        .HasColumnType("int unsigned");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("review", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Users.Domain.Model.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("longtext");

                    b.Property<uint>("Role")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Book", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksAuthors", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Author", "Author")
                        .WithMany("BooksAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Book", "Book")
                        .WithMany("BooksAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksCategories", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Book", "Book")
                        .WithMany("BooksCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Category", "Category")
                        .WithMany("BooksCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Reviews.Domain.Model.Review", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .HasPrincipalKey("ItemUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapachesLectoresBackend.Users.Domain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("ItemUuid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Author", b =>
                {
                    b.Navigation("BooksAuthors");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Book", b =>
                {
                    b.Navigation("BooksAuthors");

                    b.Navigation("BooksCategories");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Category", b =>
                {
                    b.Navigation("BooksCategories");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
