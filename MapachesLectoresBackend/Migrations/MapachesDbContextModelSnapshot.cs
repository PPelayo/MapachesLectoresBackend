// <auto-generated />
using System;
using MapachesLectoresBackend.Core.Data.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MapachesLectoresBackend.Migrations
{
    [DbContext(typeof(MapachesDbContext))]
    partial class MapachesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Author", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("author", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Book", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<uint>("NumberOfPages")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<uint>("PublisherId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("book", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksAuthors", b =>
                {
                    b.Property<uint>("BookId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("AuthorId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("books_authors", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksCategories", b =>
                {
                    b.Property<uint>("BookId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("CategoryId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("books_categories", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Category", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Publisher", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("publisher", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Users.Domain.Model.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("ItemUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(99999)
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME(3)")
                        .HasDefaultValueSql("NOW(3)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ItemUuid")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Book", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksAuthors", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Author", "Author")
                        .WithMany("BooksAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Book", "Book")
                        .WithMany("BooksAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.BooksCategories", b =>
                {
                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Book", "Book")
                        .WithMany("BooksCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapachesLectoresBackend.Books.Domain.Model.Category", "Category")
                        .WithMany("BooksCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Author", b =>
                {
                    b.Navigation("BooksAuthors");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Book", b =>
                {
                    b.Navigation("BooksAuthors");

                    b.Navigation("BooksCategories");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Category", b =>
                {
                    b.Navigation("BooksCategories");
                });

            modelBuilder.Entity("MapachesLectoresBackend.Books.Domain.Model.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
